{"version":3,"file":"ng-chat.component.d.ts","sources":["ng-chat.component.d.ts"],"names":[],"mappingssourcesContent":["import { OnInit, QueryList, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ChatAdapter } from './core/chat-adapter';\r\nimport { IChatGroupAdapter } from './core/chat-group-adapter';\r\nimport { User } from \"./core/user\";\r\nimport { ParticipantResponse } from \"./core/participant-response\";\r\nimport { Message } from \"./core/message\";\r\nimport { MessageType } from \"./core/message-type.enum\";\r\nimport { Window } from \"./core/window\";\r\nimport { ChatParticipantStatus } from \"./core/chat-participant-status.enum\";\r\nimport { Localization } from './core/localization';\r\nimport { IChatController } from './core/chat-controller';\r\nimport { IFileUploadAdapter } from './core/file-upload-adapter';\r\nimport { Theme } from './core/theme.enum';\r\nimport { IChatOption } from './core/chat-option';\r\nimport { ChatParticipantType } from \"./core/chat-participant-type.enum\";\r\nimport { IChatParticipant } from \"./core/chat-participant\";\r\nimport { NgChatWindowComponent } from './components/ng-chat-window/ng-chat-window.component';\r\nexport declare class NgChat implements OnInit, IChatController {\r\n    private _httpClient;\r\n    constructor(_httpClient: HttpClient);\r\n    ChatParticipantType: typeof ChatParticipantType;\r\n    ChatParticipantStatus: typeof ChatParticipantStatus;\r\n    MessageType: typeof MessageType;\r\n    private _isDisabled;\r\n    get isDisabled(): boolean;\r\n    set isDisabled(value: boolean);\r\n    adapter: ChatAdapter;\r\n    groupAdapter: IChatGroupAdapter;\r\n    userId: any;\r\n    isCollapsed: boolean;\r\n    maximizeWindowOnNewMessage: boolean;\r\n    pollFriendsList: boolean;\r\n    pollingInterval: number;\r\n    historyEnabled: boolean;\r\n    emojisEnabled: boolean;\r\n    linkfyEnabled: boolean;\r\n    audioEnabled: boolean;\r\n    searchEnabled: boolean;\r\n    audioSource: string;\r\n    persistWindowsState: boolean;\r\n    title: string;\r\n    messagePlaceholder: string;\r\n    searchPlaceholder: string;\r\n    browserNotificationsEnabled: boolean;\r\n    browserNotificationIconSource: string;\r\n    browserNotificationTitle: string;\r\n    historyPageSize: number;\r\n    localization: Localization;\r\n    hideFriendsList: boolean;\r\n    hideFriendsListOnUnsupportedViewport: boolean;\r\n    fileUploadUrl: string;\r\n    theme: Theme;\r\n    customTheme: string;\r\n    messageDatePipeFormat: string;\r\n    showMessageDate: boolean;\r\n    isViewportOnMobileEnabled: boolean;\r\n    fileUploadAdapter: IFileUploadAdapter;\r\n    onParticipantClicked: EventEmitter<IChatParticipant>;\r\n    onParticipantChatOpened: EventEmitter<IChatParticipant>;\r\n    onParticipantChatClosed: EventEmitter<IChatParticipant>;\r\n    onMessagesSeen: EventEmitter<Message[]>;\r\n    private browserNotificationsBootstrapped;\r\n    hasPagedHistory: boolean;\r\n    private statusDescription;\r\n    private audioFile;\r\n    participants: IChatParticipant[];\r\n    participantsResponse: ParticipantResponse[];\r\n    participantsInteractedWith: IChatParticipant[];\r\n    currentActiveOption: IChatOption | null;\r\n    private pollingIntervalWindowInstance;\r\n    private get localStorageKey();\r\n    windowSizeFactor: number;\r\n    friendsListWidth: number;\r\n    private viewPortTotalArea;\r\n    unsupportedViewport: boolean;\r\n    windows: Window[];\r\n    isBootstrapped: boolean;\r\n    chatWindows: QueryList<NgChatWindowComponent>;\r\n    ngOnInit(): void;\r\n    onResize(event: any): void;\r\n    private NormalizeWindows;\r\n    private bootstrapChat;\r\n    private activateFriendListFetch;\r\n    private initializeBrowserNotifications;\r\n    private initializeDefaultText;\r\n    private initializeTheme;\r\n    private fetchFriendsList;\r\n    fetchMessageHistory(window: Window): void;\r\n    private onFetchMessageHistoryLoaded;\r\n    private onFriendsListChanged;\r\n    private onMessageReceived;\r\n    onParticipantClickedFromFriendsList(participant: IChatParticipant): void;\r\n    private cancelOptionPrompt;\r\n    onOptionPromptCanceled(): void;\r\n    onOptionPromptConfirmed(event: any): void;\r\n    private confirmNewGroup;\r\n    private openChatWindow;\r\n    private focusOnWindow;\r\n    private assertMessageType;\r\n    markMessagesAsRead(messages: Message[]): void;\r\n    private bufferAudioFile;\r\n    private emitMessageSound;\r\n    private emitBrowserNotification;\r\n    private updateWindowsState;\r\n    private restoreWindowsState;\r\n    private getClosestWindow;\r\n    private closeWindow;\r\n    private getChatWindowComponentInstance;\r\n    private scrollChatWindow;\r\n    onWindowMessagesSeen(messagesSeen: Message[]): void;\r\n    onWindowChatClosed(payload: {\r\n        closedWindow: Window;\r\n        closedViaEscapeKey: boolean;\r\n    }): void;\r\n    onWindowTabTriggered(payload: {\r\n        triggeringWindow: Window;\r\n        shiftKeyPressed: boolean;\r\n    }): void;\r\n    onWindowMessageSent(messageSent: Message): void;\r\n    onWindowOptionTriggered(option: IChatOption): void;\r\n    triggerOpenChatWindow(user: User): void;\r\n    triggerCloseChatWindow(userId: any): void;\r\n    triggerToggleChatWindowVisibility(userId: any): void;\r\n}\r\n"]}